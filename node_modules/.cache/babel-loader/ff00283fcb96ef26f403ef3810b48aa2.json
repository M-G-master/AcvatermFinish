{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport let SortPropertyEnum;\n\n(function (SortPropertyEnum) {\n  SortPropertyEnum[\"RATING_DESC\"] = \"rating\";\n  SortPropertyEnum[\"RATING_ASC\"] = \"-rating\";\n  SortPropertyEnum[\"TITLE_DESC\"] = \"title\";\n  SortPropertyEnum[\"TITLE_ASC\"] = \"-title\";\n  SortPropertyEnum[\"PRICE_DESC\"] = \"price\";\n  SortPropertyEnum[\"PRICE_ASC\"] = \"-price\";\n})(SortPropertyEnum || (SortPropertyEnum = {}));\n\n;\nconst initialState = {\n  searchValue: '',\n  categoryId: 0,\n  currentPage: 1,\n  sort: {\n    name: 'популярністью',\n    sortProperty: SortPropertyEnum.PRICE_DESC\n  }\n};\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    setCategoryId(state, action) {\n      state.categoryId = action.payload;\n    },\n\n    setSearchValue(state, action) {\n      state.searchValue = action.payload;\n    },\n\n    setSort(state, action) {\n      state.sort = action.payload;\n    },\n\n    setCurrentPage(state, action) {\n      state.currentPage = action.payload;\n    },\n\n    setFilters(state, action) {\n      if (Object.keys(action.payload).length) {\n        state.currentPage = Number(action.payload.currentPage);\n        state.categoryId = Number(action.payload.categoryId);\n        state.sort = action.payload.sort;\n      } else {\n        state.currentPage = 1;\n        state.categoryId = 0;\n        state.sort = {\n          name: 'популярністью',\n          sortProperty: SortPropertyEnum.PRICE_DESC\n        };\n      }\n    }\n\n  }\n});\nexport const selectFilter = state => state.filter;\nexport const selectSort = state => state.filter.sort;\nexport const {\n  setCategoryId,\n  setSort,\n  setCurrentPage,\n  setFilters,\n  setSearchValue\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","SortPropertyEnum","initialState","searchValue","categoryId","currentPage","sort","name","sortProperty","PRICE_DESC","filterSlice","reducers","setCategoryId","state","action","payload","setSearchValue","setSort","setCurrentPage","setFilters","Object","keys","length","Number","selectFilter","filter","selectSort","actions","reducer"],"sources":["C:/Проэкты/AKVATERM/src/redux/slices/filterSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\nexport enum SortPropertyEnum {\r\n  RATING_DESC= 'rating', \r\n  RATING_ASC = '-rating',  \r\n  TITLE_DESC = 'title', \r\n  TITLE_ASC = '-title', \r\n  PRICE_DESC = 'price',\r\n  PRICE_ASC = '-price',\r\n}\r\n\r\nexport type Sort = {\r\n  name: string;\r\n  sortProperty: SortPropertyEnum ;\r\n}\r\n\r\nexport interface FilterSliceState {\r\n  searchValue: string;\r\n  categoryId: number;\r\n  currentPage: number;\r\n  sort: Sort;\r\n};\r\n\r\nconst initialState: FilterSliceState = {\r\n  searchValue: '',\r\n  categoryId: 0,\r\n  currentPage: 1,\r\n  sort: {\r\n    name: 'популярністью',\r\n    sortProperty: SortPropertyEnum.PRICE_DESC,\r\n  },\r\n};\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n    setCategoryId(state, action: PayloadAction<number>) {\r\n      state.categoryId = action.payload;\r\n    },\r\n    setSearchValue(state, action: PayloadAction<string>) {\r\n      state.searchValue = action.payload;\r\n    },\r\n    setSort(state, action: PayloadAction<Sort>) {\r\n      state.sort = action.payload;\r\n    },\r\n    setCurrentPage(state, action: PayloadAction<number>) {\r\n      state.currentPage = action.payload;\r\n    },\r\n    setFilters(state, action: PayloadAction<FilterSliceState>) {\r\n      if (Object.keys(action.payload).length) {\r\n        state.currentPage = Number(action.payload.currentPage);\r\n        state.categoryId = Number(action.payload.categoryId);\r\n        state.sort = action.payload.sort;\r\n      } else {\r\n        state.currentPage = 1;\r\n        state.categoryId = 0;\r\n        state.sort = {\r\n          name: 'популярністью',\r\n          sortProperty: SortPropertyEnum.PRICE_DESC,\r\n        };\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectFilter = (state: RootState) => state.filter;\r\nexport const selectSort = (state: RootState) => state.filter.sort;\r\nexport const { setCategoryId, setSort, setCurrentPage, setFilters, setSearchValue } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,WAAYC,gBAAZ;;WAAYA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;GAAAA,gB,KAAAA,gB;;AAmBX;AAED,MAAMC,YAA8B,GAAG;EACrCC,WAAW,EAAE,EADwB;EAErCC,UAAU,EAAE,CAFyB;EAGrCC,WAAW,EAAE,CAHwB;EAIrCC,IAAI,EAAE;IACJC,IAAI,EAAE,eADF;IAEJC,YAAY,EAAEP,gBAAgB,CAACQ;EAF3B;AAJ+B,CAAvC;AAUA,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BO,IAAI,EAAE,SADwB;EAE9BL,YAF8B;EAG9BS,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAuC;MAClDD,KAAK,CAACT,UAAN,GAAmBU,MAAM,CAACC,OAA1B;IACD,CAHO;;IAIRC,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAuC;MACnDD,KAAK,CAACV,WAAN,GAAoBW,MAAM,CAACC,OAA3B;IACD,CANO;;IAORE,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAqC;MAC1CD,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;IACD,CATO;;IAURG,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAuC;MACnDD,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;IACD,CAZO;;IAaRI,UAAU,CAACN,KAAD,EAAQC,MAAR,EAAiD;MACzD,IAAIM,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACC,OAAnB,EAA4BO,MAAhC,EAAwC;QACtCT,KAAK,CAACR,WAAN,GAAoBkB,MAAM,CAACT,MAAM,CAACC,OAAP,CAAeV,WAAhB,CAA1B;QACAQ,KAAK,CAACT,UAAN,GAAmBmB,MAAM,CAACT,MAAM,CAACC,OAAP,CAAeX,UAAhB,CAAzB;QACAS,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAAP,CAAeT,IAA5B;MACD,CAJD,MAIO;QACLO,KAAK,CAACR,WAAN,GAAoB,CAApB;QACAQ,KAAK,CAACT,UAAN,GAAmB,CAAnB;QACAS,KAAK,CAACP,IAAN,GAAa;UACXC,IAAI,EAAE,eADK;UAEXC,YAAY,EAAEP,gBAAgB,CAACQ;QAFpB,CAAb;MAID;IACF;;EA1BO;AAHoB,CAAD,CAA/B;AAiCA,OAAO,MAAMe,YAAY,GAAIX,KAAD,IAAsBA,KAAK,CAACY,MAAjD;AACP,OAAO,MAAMC,UAAU,GAAIb,KAAD,IAAsBA,KAAK,CAACY,MAAN,CAAanB,IAAtD;AACP,OAAO,MAAM;EAAEM,aAAF;EAAiBK,OAAjB;EAA0BC,cAA1B;EAA0CC,UAA1C;EAAsDH;AAAtD,IAAyEN,WAAW,CAACiB,OAA3F;AACP,eAAejB,WAAW,CAACkB,OAA3B"},"metadata":{},"sourceType":"module"}