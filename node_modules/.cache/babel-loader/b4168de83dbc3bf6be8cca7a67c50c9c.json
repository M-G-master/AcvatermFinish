{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u041F\\u0440\\u043E\\u044D\\u043A\\u0442\\u044B\\\\AKVATERM\\\\src\\\\Pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport qs from 'qs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { SearchContext } from '../App';\nimport { sortList } from '../components/Sort';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const fetchPizzas = async () => {\n    setIsLoading(true);\n    const sortBy = sort.sortProperty.replace('-', '');\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n\n    try {\n      dispatch(fetchPizzas({\n        sortBy,\n        order,\n        category,\n        search\n      }));\n    } catch (error) {\n      console.console.log('ERROR', error);\n      alert('Помилка при полученні товару');\n    } finally {\n      setIsLoading(false);\n    }\n\n    window.scrollTo(0, 0);\n  }; // React.useEffect(() => {\n  //   if (isMounted.current) {\n  //     const params = {\n  //       categoryId: categoryId > 0 ? categoryId : null,\n  //       sortProperty: sort.sortProperty,\n  //       currentPage,\n  //     };\n  //     const queryString = qs.stringify(params, { skipNulls: true });\n  //     navigate(`/?${queryString}`);\n  //   }\n  //   const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n  //   const sortObj = sortList.find((obj) => obj.sortProperty === params.sortBy);\n  //   dispatch(\n  //     setFilters({\n  //       searchValue: params.search,\n  //       categoryId: Number(params.category),\n  //       currentPage: Number(params.currentPage),\n  //       sort: sortObj || sortList[0],\n  //     }),\n  //   );\n  //   getPizzas();\n  //   isMounted.current = true;\n  // }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      fetchPizzas();\n    }\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]); // React.useEffect(() => {\n  //   if (window.location.search) {\n  //     const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n  //     const sort = sortList.find((obj) => obj.sortProperty === params.sortBy);\n  //     dispatch(\n  //       setFilters({\n  //         searchValue: params.search,\n  //         categoryId: Number(params.category),\n  //         currentPage: Number(params.currentPage),\n  //         sort: sort || sortList[0],\n  //       }),\n  //     );\n  //   }\n  //   isMounted.current = true;\n  // }, []);\n\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 37\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 57\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0423\\u0441\\u0456 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"BFXWg6g4228dHTB2JBAYBkNLhF0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","useDispatch","useSelector","useLocation","useNavigate","Categories","Sort","PizzaBlock","Skeleton","Pagination","SearchContext","sortList","setCategoryId","setCurrentPage","setFilters","fetchPizzas","Home","navigate","dispatch","isMounted","useRef","items","state","pizza","categoryId","sort","currentPage","filter","searchValue","useContext","isLoading","setIsLoading","useState","onChangeCategory","id","onChangePage","number","sortBy","sortProperty","replace","order","includes","category","search","error","console","log","alert","window","scrollTo","useEffect","location","pizzas","map","obj","skeletons","Array","_","index"],"sources":["C:/Проэкты/AKVATERM/src/Pages/Home.jsx"],"sourcesContent":["import React from 'react';\r\nimport qs from 'qs';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport Categories from '../components/Categories';\r\nimport Sort from '../components/Sort';\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport Skeleton from '../components/PizzaBlock/Skeleton';\r\nimport Pagination from '../components/Pagination';\r\nimport { SearchContext } from '../App';\r\nimport { sortList } from '../components/Sort';\r\n\r\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';\r\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const isMounted = React.useRef(false);\r\n\r\n  const items = useSelector((state) => state.pizza.items);\r\n  const { categoryId, sort, currentPage } = useSelector((state) => state.filter);\r\n\r\n  const { searchValue } = React.useContext(SearchContext);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n  const onChangeCategory = (id) => {\r\n    dispatch(setCategoryId(id));\r\n  };\r\n  const onChangePage = (number) => {\r\n    dispatch(setCurrentPage(number));\r\n  };\r\n\r\n  const fetchPizzas = async () => {\r\n    setIsLoading(true);\r\n\r\n    const sortBy = sort.sortProperty.replace('-', '');\r\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\r\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\r\n    const search = searchValue ? `&search=${searchValue}` : '';\r\n\r\n    try {\r\n      dispatch(\r\n        fetchPizzas({\r\n          sortBy,\r\n          order,\r\n          category,\r\n          search,\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      console.console.log('ERROR', error);\r\n      alert('Помилка при полученні товару');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // React.useEffect(() => {\r\n  //   if (isMounted.current) {\r\n  //     const params = {\r\n  //       categoryId: categoryId > 0 ? categoryId : null,\r\n  //       sortProperty: sort.sortProperty,\r\n  //       currentPage,\r\n  //     };\r\n\r\n  //     const queryString = qs.stringify(params, { skipNulls: true });\r\n\r\n  //     navigate(`/?${queryString}`);\r\n  //   }\r\n\r\n  //   const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\r\n  //   const sortObj = sortList.find((obj) => obj.sortProperty === params.sortBy);\r\n  //   dispatch(\r\n  //     setFilters({\r\n  //       searchValue: params.search,\r\n  //       categoryId: Number(params.category),\r\n  //       currentPage: Number(params.currentPage),\r\n  //       sort: sortObj || sortList[0],\r\n  //     }),\r\n  //   );\r\n\r\n  //   getPizzas();\r\n  //   isMounted.current = true;\r\n  // }, [categoryId, sort.sortProperty, searchValue, currentPage]);\r\n\r\n  React.useEffect(() => {\r\n    if (window.location.search) {\r\n      fetchPizzas();\r\n    }\r\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\r\n\r\n  // React.useEffect(() => {\r\n  //   if (window.location.search) {\r\n  //     const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\r\n  //     const sort = sortList.find((obj) => obj.sortProperty === params.sortBy);\r\n  //     dispatch(\r\n  //       setFilters({\r\n  //         searchValue: params.search,\r\n  //         categoryId: Number(params.category),\r\n  //         currentPage: Number(params.currentPage),\r\n  //         sort: sort || sortList[0],\r\n  //       }),\r\n  //     );\r\n  //   }\r\n  //   isMounted.current = true;\r\n  // }, []);\r\n\r\n  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);\r\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories value={categoryId} onChangeCategory={onChangeCategory} />\r\n        <Sort />\r\n      </div>\r\n      <h2 className=\"content__title\">Усі товари</h2>\r\n      <div className=\"content__items\">{isLoading ? skeletons : pizzas}</div>\r\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}