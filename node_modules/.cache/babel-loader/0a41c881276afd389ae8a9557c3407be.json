{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { Status } from './types';\nimport { fetchPizzas } from './asyncActions';\nconst initialState = {\n  items: [],\n  status: Status.LOADING // loading | success | error\n\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","Status","fetchPizzas","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["C:/Проэкты/GITfile/AcvatermFinish/src/redux/pizza/slice.ts"],"sourcesContent":["import {  createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { PizzaSliceState, Status, Pizza } from './types';\r\nimport { fetchPizzas } from './asyncActions';\r\n\r\n\r\n\r\nconst initialState: PizzaSliceState = {\r\n  items: [],\r\n  status: Status.LOADING, // loading | success | error\r\n};\r\n\r\nexport type SearchPizzaParams = { \r\n  sortBy: string;\r\n  order:  string;\r\n  category:  string;\r\n  search: string;\r\n  currentPage: string;\r\n}\r\n\r\n\r\nconst pizzaSlice = createSlice({\r\n  name: 'pizza',\r\n  initialState,\r\n  reducers: {\r\n    setItems(state, action: PayloadAction<Pizza[]>) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPizzas.pending, (state, action) => {\r\n      state.status = Status.LOADING;\r\n      state.items = [];\r\n    })\r\n  \r\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SUCCESS;\r\n    })\r\n  \r\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n      state.status = Status.ERROR;\r\n      state.items = [];\r\n    })\r\n  }\r\n});\r\n\r\n\r\nexport const { setItems } = pizzaSlice.actions;\r\nexport default pizzaSlice.reducer;"],"mappings":"AAAA,SAAUA,WAAV,QAA4C,kBAA5C;AACA,SAA0BC,MAA1B,QAA+C,SAA/C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAIA,MAAMC,YAA6B,GAAG;EACpCC,KAAK,EAAE,EAD6B;EAEpCC,MAAM,EAAEJ,MAAM,CAACK,OAFqB,CAEZ;;AAFY,CAAtC;AAcA,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OADuB;EAE7BL,YAF6B;EAG7BM,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAwC;MAC9CD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;IACD;;EAHO,CAHmB;EAS7BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBd,WAAW,CAACe,OAA5B,EAAqC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACtDD,KAAK,CAACN,MAAN,GAAeJ,MAAM,CAACK,OAAtB;MACAK,KAAK,CAACP,KAAN,GAAc,EAAd;IACD,CAHD;IAKAW,OAAO,CAACC,OAAR,CAAgBd,WAAW,CAACgB,SAA5B,EAAuC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACxDD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;MACAF,KAAK,CAACN,MAAN,GAAeJ,MAAM,CAACkB,OAAtB;IACD,CAHD;IAKAJ,OAAO,CAACC,OAAR,CAAgBd,WAAW,CAACkB,QAA5B,EAAsC,CAACT,KAAD,EAAQC,MAAR,KAAmB;MACvDD,KAAK,CAACN,MAAN,GAAeJ,MAAM,CAACoB,KAAtB;MACAV,KAAK,CAACP,KAAN,GAAc,EAAd;IACD,CAHD;EAID;AAxB4B,CAAD,CAA9B;AA4BA,OAAO,MAAM;EAAEM;AAAF,IAAeH,UAAU,CAACe,OAAhC;AACP,eAAef,UAAU,CAACgB,OAA1B"},"metadata":{},"sourceType":"module"}